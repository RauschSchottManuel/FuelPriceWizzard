name: SonarQube Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '22.8.x'
  JAVA_DISTRIBUTION: 'temurin'
  JAVA_VERSION: '17'

jobs:
  dotnet_build:
    name: Build and Test .NET
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore FuelPriceWizard.sln

      - name: Build .NET projects
        run: dotnet build FuelPriceWizard.sln --configuration Release --no-restore

      - name: Run .NET tests and collect code coverage
        run: dotnet test FuelPriceWizard.sln --configuration Release --collect:"XPlat Code Coverage;Format=opencover" --logger "trx"
        
      - name: Upload .NET Test Results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-test-results
          path: ./FuelPriceWizard/**/TestResults/**

  angular_build:
    name: Build and Test Angular
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci
        working-directory: ./FuelPriceWizard.UI/fuelpricewizard

      - name: Build Angular project
        run: npm run build
        working-directory: ./FuelPriceWizard.UI/fuelpricewizard

      - name: Run Angular tests and collect code coverage
        run: npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless
        working-directory: ./FuelPriceWizard.UI/fuelpricewizard

      - name: Upload Angular Test Results
        uses: actions/upload-artifact@v4
        with:
          name: angular-test-results
          path: ./FuelPriceWizard.UI/fuelpricewizard/coverage

  sonarqube_scan:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: [dotnet_build, angular_build]  # Wait for both builds to complete

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Install SonarScanner for .NET
      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      # Add .NET tools to PATH
      - name: Set up PATH for dotnet tools
        run: echo "/home/runner/.dotnet/tools" >> $GITHUB_PATH

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Java for SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache SonarQube settings
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache-${{ hashFiles('**/.github/workflows/sonarqube.yml') }}
          restore-keys: |
            ${{ runner.os }}-sonar-cache-

      - name: SonarQube Scan
        run: |
          dotnet-sonarscanner begin /k:"RauschSchottManuel_FuelPriceWizzard_ee84ae87-553d-4321-b870-ec9b8be6b491" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.projectBaseDir="$(pwd)" \
            /d:sonar.scanner.skipJreProvisioning=true \
            /d:sonar.coverage.exclusions="**/**/Migrations/**,**/**/obj/**,**/**/bin/**" \
            /d:sonar.cs.opencover.reportsPaths="./**/TestResults/**/coverage.opencover.xml" \
            /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" \
            /d:sonar.typescript.lcov.reportPaths=FuelPriceWizard.UI/fuelpricewizard/coverage/lcov.info
          dotnet build FuelPriceWizard.sln
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

name: SonarQube Scan

on:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '22.8.x'
  JAVA_DISTRIBUTION: 'temurin'
  JAVA_VERSION: '17'

jobs:
  sonarQube:
    name: SonarQube Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Install SonarScanner for .NET
    - name: Install dotnet-sonarscanner
      run: dotnet tool install --global dotnet-sonarscanner

    # Add .NET tools to PATH
    - name: Set up PATH for dotnet tools
      run: echo "/home/runner/.dotnet/tools" >> $GITHUB_PATH

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Set up Java for SonarQube
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.JAVA_DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    - name: Cache SonarQube settings
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-cache-${{ hashFiles('**/.github/workflows/sonarqube.yml') }}
        restore-keys: |
          ${{ runner.os }}-sonar-cache-


    - name: Install dependencies (Angular)
      working-directory: ./FuelPriceWizard.UI/fuelpricewizard
      run: npm install

      # Build and test Angular project
    - name: Build Angular project
      working-directory: ./FuelPriceWizard.UI/fuelpricewizard
      run: npm run build

    - name: Run Angular tests
      working-directory: ./FuelPriceWizard.UI/fuelpricewizard
      run: npm run test -- --watch=false --code-coverage --browsers=ChromeHeadless

    # Build and test .NET projects
    - name: Build .NET projects
      working-directory: ./
      run: dotnet build FuelPriceWizard.sln --configuration Release

    - name: Run tests for .NET projects and collect code coverage
      working-directory: ./
      run: dotnet test FuelPriceWizard.sln --configuration Release --collect:"XPlat Code Coverage;Format=opencover;OutputDirectory=./coverage;Output=coverage.opencover.xml" --logger "trx"

    - name: List coverage files
      run: |
        echo "Checking for coverage files..."
        ls -la ./**/TestResults/
        echo "root directory"
        ls -la ./
        echo "DataCollector.Tests directory"
        ls -la ./FuelPriceWizard.DataCollector.Tests/
        echo "./coverage directory"
        ls -la ./coverage/

    - name: SonarQube Scan
      run: |
        dotnet-sonarscanner begin /k:"RauschSchottManuel_FuelPriceWizzard_ee84ae87-553d-4321-b870-ec9b8be6b491" \
          /d:"sonar.verbose=true" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
          /d:sonar.projectBaseDir="$(pwd)" \
          /d:sonar.scanner.skipJreProvisioning=true \
          /d:sonar.coverage.exclusions="**/**/Migrations/**,**/**/obj/**,**/**/bin/**" \
          /d:sonar.cs.opencover.reportsPaths="./coverage/coverage.opencover.xml" \
          /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" \
          /d:sonar.typescript.lcov.reportPaths=FuelPriceWizard.UI/fuelpricewizard/coverage/lcov.info
        dotnet build FuelPriceWizard.sln
        dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"